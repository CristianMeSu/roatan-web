---
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import Layout from "../../../layouts/Layout.astro";
import Footer from "../../../components/Footer/Footer.astro";
import Menu from "../../../components/Headers/MenuBlog.astro";
import "../../../assets/css/blog.css";
import type { APIContext } from "astro";

//@ts-ignore
const { lang, slug } = Astro.params;

const filePath = path.resolve(`./src/posts/${lang}/${slug}.md`);
const fileContent = fs.readFileSync(filePath, "utf-8");
const { data, content } = matter(fileContent);

// üëá Esto debe ir AQU√ç
const contentBlocks = content.split("<!--split-->");

export async function getStaticPaths(): Promise<APIContext["params"][]> {
  const fs = await import("fs");
  const path = await import("path");

  const langs = ["es", "en"];
  const paths: APIContext["params"][] = [];

  for (const lang of langs) {
    const dir = path.resolve(`./src/posts/${lang}`);
    const files = fs.readdirSync(dir);

    for (const filename of files) {
      const slug = filename.replace(".md", "");

      paths.push({
        //@ts-ignore
        params: { lang, slug },
      });
    }
  }

  return paths;
}

---

<Layout lang={lang}>
  <Menu lang={lang} />
  <article
    class="Article-container bg-white w-screen flex flex-col items-center justify-center"
  >
    <div class="w-full px-8 md:w-3/4 md:-0">
      <h2
        class="text-4xl md:text-7xl text-center pt-8 text-[var(--primary-color)]"
      >
        {data.title}
      </h2>
      <div class="first-text-container text-justify pt-8">
        <div set:html={contentBlocks[0]} />
      </div>
      <div class="gallery-container grid gap-4 pt-8">
        {
          data.gridgallery &&
            Array.isArray(data.gridgallery) &&
            data.gridgallery.map((img, index) => (
              <div class="rounded-xl" style={`grid-area:image-${index + 1}`}>
                <img
                  class="rounded-xl object-cover object-center h-full"
                  src={img.url}
                  alt={img.alt ?? `Imagen${index + 1}`}
                />
              </div>
            ))
        }
      </div>
      <div class="second-text-container text-justify pt-8">
        <div set:html={contentBlocks[1]} />
      </div>
      <div class="second-gallery-container flex flex-col gap-4 pt-8">
        {
          data.gallery &&
            Array.isArray(data.gallery) &&
            data.gallery.map((img, index) => (
              <div class="rounded-xl" style={`grid-area:image-${index + 1}`}>
                <img
                  class="rounded-xl object-cover object-center w-full "
                  src={img.url}
                  alt={img.alt ?? `Imagen${index + 1}`}
                />
              </div>
            ))
        }
      </div>
    </div>
  </article>
  <Footer lang={lang} videoFile="fondo-footer-blanco.mp4" />
</Layout>
