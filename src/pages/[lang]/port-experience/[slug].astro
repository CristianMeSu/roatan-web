---
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import Layout from "../../../layouts/Layout.astro";
import Footer from "../../../components/Footer/Footer.astro";
import Menu from "../../../components/Headers/MenuBlog.astro";
import "../../../assets/css/blog.css";
import type { APIContext } from "astro";

//@ts-ignore
const { lang, slug } = Astro.params;

const filePath = path.resolve(`./src/ports/${lang}/${slug}.md`);
const fileContent = fs.readFileSync(filePath, "utf-8");
const { data, content } = matter(fileContent);

export async function getStaticPaths(): Promise<APIContext["params"][]> {
  const fs = await import("fs");
  const path = await import("path");

  const langs = ["es", "en"];
  const paths: APIContext["params"][] = [];

  for (const lang of langs) {
    const dir = path.resolve(`./src/ports/${lang}`);
    const files = fs.readdirSync(dir);

    for (const filename of files) {
      const slug = filename.replace(".md", "");

      paths.push({
        //@ts-ignore
        params: { lang, slug },
      });
    }
  }

  return paths;
}
---

<Layout lang={lang}>
  <Menu lang={lang} />

  <div class="w-screen justify-center flex">
    <div class="w-4/5">
      <div
        class="gallery-container pt-8 grid grid-cols-2 md:grid-cols-4 gap-4 auto-rows-[300px] px-4"
      >
        {
          data.gridgallery?.map((img, index) => {
            const isVertical = img.orientation === "vertical";
            return (
              <div
                class={`relative overflow-hidden rounded-xl group ${
                  isVertical
                    ? "md:row-span-2 md:col-span-2 row-span-1 col-span-1"
                    : "md:row-span-1 md:col-span-2 row-span-1 col-span-2"
                }`}
              >
                <img
                  src={img.url}
                  alt={img.alt ?? `Imagen ${index + 1}`}
                  loading="lazy"
                  class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                />
                {/* Sombra o efecto adicional si deseas */}
                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/10 transition-all" />
              </div>
            );
          })
        }
      </div>
    </div>
  </div>
  <Footer lang={lang} videoFile="fondo-footer-blanco.mp4" />
  <style>
    .swiper-pagination {
      bottom: 0px !important;
      position: absolute !important;
      text-align: center;
      width: 100%;
      z-index: 10;
    }
  </style>
</Layout>
