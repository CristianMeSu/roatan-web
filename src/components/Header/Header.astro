---
import Menu from "../Header/Menu.astro";
import { translations } from "../../locales.js";
const lang = Astro.props?.lang ?? "es";
const t = translations[lang] ?? translations["es"];
import { Image } from "astro:assets";
import "aos/dist/aos.css";
import headerVideo from "../../assets/video/RT.mp4";
import roatanLogo from "../../assets/img/logo/Roatan-LogoBlanco.png";
---

<header class="bg-image-header md:w-screen h-96 md:h-screen">
  <div class="relative w-full h-full z-0">
    <video
      src={headerVideo}
      class="absolute w-full h-full object-cover"
      autoplay
      muted
      loop
      playsinline></video>
    <div class="absolute w-full h-full bg-gradient-header">
    </div>
    <Menu lang={lang} />
  </div>

  <div class="md:w-screen h-96 md:h-screen z-10">
    

    <Image
      class="left-24 absolute top-10 md:top-10 w-24 h-auto xl:w-36 xl:h-auto"
      src={roatanLogo}
      alt="logo"
      loading="eager"
    />
    <div
      class="title_container w-2/5 flex flex-col items-left lg:top-1/3 xl:top-1/3 left-24 absolute gap-1"
    >
      <h1
        class="text-white font-bebas font-bold"
        set:html={t.header.title}
      />
      <h2
        class="text-white font-bebas font-bold"
      >
      <span
    id="subtitle-text"
    data-subtitles={t.header.subtitle}
    class="transition-opacity duration-1000 opacity-100"
  >Vision</span>
      </h2>
      <div class="border-2 border-white w-fit p-2 rounded-xl cursor-pointer">
        <a
          href="#"
          class="uppercase text-2xl xl:text-4xl w-1/2 text-white font-lato text-justify mx-6"
          >{t.header.button}</a
        >
      </div>
    </div>
  </div>
</header>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const subtitleElement = document.getElementById('subtitle-text');
    const subtitleRaw = subtitleElement?.dataset.subtitles ?? '';
    const words = subtitleRaw.split('|');
    let index = 0;

    function updateSubtitle() {
      if (subtitleElement) {
        subtitleElement.classList.add('opacity-0');
        setTimeout(() => {
          subtitleElement.textContent = words[index];
          subtitleElement.classList.remove('opacity-0');
          index = (index + 1) % words.length;
        }, 500);
      }
    }

    updateSubtitle();
    setInterval(updateSubtitle, 130);
  });
</script>
